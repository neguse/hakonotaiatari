import jinja2
import datetime

template_text = """
// generated by {{ file }} in {{ date }}
// don't edit this file directly.
#pragma once

class VariableHolder {
public:
	static u32 get_u32(const std::string& name);
	static f32 get_f32(const std::string& name);
	static void load(const char* pPath);
	static void init();
	static void update();

}; // class VariableHolder

#if ENABLE_VARIABLE
{% for var in variables %}
#define {{ var.name }} VariableHolder::get_{{ var.type }}("{{ var.name }}")
{% endfor %}

#else
{% for var in variables %}
static const {{ var.type }} {{ var.name }} = {{ var.value }};
{% endfor %}

#endif

"""
template = jinja2.Template(template_text)

def load_csv(path):
	file = open(path, "r")
	head = [col for col in file.readline()[:-1].split(",")]
	return [dict(zip(head, line[:-1].split(","))) for line in file]

def generate_header(variables):
	return template.render(variables = variables,
			file = __file__,
			date = datetime.datetime.now())

variables = load_csv("variable.csv")
header_text = generate_header(variables)
open("variable.h", "w").write(header_text)


